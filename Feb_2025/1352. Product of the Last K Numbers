Problem :: 1352. Product of the Last K Numbers
Design an algorithm that accepts a stream of integers and retrieves the product of the last k integers of the stream.

Implement the ProductOfNumbers class:

ProductOfNumbers() Initializes the object with an empty stream.
void add(int num) Appends the integer num to the stream.
int getProduct(int k) Returns the product of the last k numbers in the current list. You can assume that always the current list has at least k numbers.
The test cases are generated so that, at any time, the product of any contiguous sequence of numbers will fit into a single 32-bit integer without overflowing.

Time Complexity :: O(N)
Space Complexity :: O(N)


Code :: 
class ProductOfNumbers {
public:
    vector<int>v;
    ProductOfNumbers() {
    }
    
    void add(int num) {
        v.emplace_back(num);
    }
    
    int getProduct(int k) {
        int  prod = 1 ;
        for(int i= v.size()-1 ;i>=0 && k>0; i--){
            prod = prod * v[i];
            k--;
        }
        return prod;
    }
};
