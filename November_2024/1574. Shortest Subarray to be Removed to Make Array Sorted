Problem :: 1574. Shortest Subarray to be Removed to Make Array Sorted
Given an integer array arr, remove a subarray (can be empty) from arr such that the remaining elements in arr are non-decreasing.
Return the length of the shortest subarray to remove.
A subarray is a contiguous subsequence of the array.

Time Complexity :: O(N)
Space Complexity :: O(1)


Code ::  
class Solution {
public:
    int findLengthOfShortestSubarray(vector<int>& arr) {
        int n = arr.size();
        int s=0;
        while(s<n-1 && arr[s]<=arr[s+1])s++;
        if(s==n-1)return 0;

        int e = n-1;
        while(e>=s && arr[e]>=arr[e-1])e--;
        if(e==0)return n-1;

        int res = min(n-1-s , e);
        int i=0  , j= e;
        while(i<=s && j<n){
            if(arr[j]>= arr[i]){
                res = min(res, j-i-1);
                i++;
            }else j++;
        }
        return res;
    }
};
