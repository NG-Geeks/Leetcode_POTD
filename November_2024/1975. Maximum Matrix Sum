Problem  :: 1975. Maximum Matrix Sum

You are given an n x n integer matrix. You can do the following operation any number of times:

Choose any two adjacent elements of matrix and multiply each of them by -1.
Two elements are considered adjacent if and only if they share a border.

Your goal is to maximize the summation of the matrix's elements. Return the maximum sum of the matrix's elements using the operation mentioned above.
Time Complexity :: O(N)
Space Complexity :: O(1)

CODE :: 
class Solution {
public:
    long long maxMatrixSum(vector<vector<int>>& matrix) {
        long long sum =0;
        bool f_zero = 0;
        int cnt =0;
        int mini = INT_MAX;
        for(int i = 0 ; i<matrix.size() ; i++){
            for(int j= 0 ; j<matrix[0].size() ; j++){
                if(matrix[i][j]==0)f_zero = 1;
                if(matrix[i][j]<0 )cnt++;
                mini = min(mini ,abs( matrix[i][j]));
                sum += abs(matrix[i][j]);
            }
        }
        if(cnt%2 == 0 or f_zero )return sum;
        return sum -2*mini;
    }
};
