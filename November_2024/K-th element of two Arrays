Problem :: K-th element of two Arrays
Given two sorted arrays a[] and b[] and an element k, the task is to find the element that would be at the kth position of the combined sorted array.

Time Complexity :: O(N)
Space Complexity :: O(1)

Code ::
class Solution {
  public:
    int kthElement(vector<int>& a, vector<int>& b, int k) {
        // Approach 1 
        int i=0  , j =0 ;
        while(i<a.size() && j<b.size()){
            if(a[i]<b[j]){
                i++;
                if(i+j == k)return a[i-1];
            }
            else if(b[j]<a[i]){
                j++;
                if(i+j == k)return b[j-1];
            }
            else {
                i++;
                if(i+j == k)return a[i-1];
                j++;
                if(i+j == k)return b[j-1];
            }
            
            
        }
        while( i < a.size()){
            i++;
            if(i+j == k)return a[i-1];
        }
        while( j < b.size()){
            j++;
            if(i + j == k)return b[j-1];
        }
        return a[a.size()-1]>b[b.size()-1] ? a[a.size()-1] : b[b.size()-1] ;
        
        // Approach 2
        // Time Complexity :: O((n+m).log(n+m))
        // Space Complexity :: o(N)
        vector<int>v(begin(a) , end(a));
        for(int i:b)v.push_back(i);
        sort(begin(v),end(v));
        return v[k-1];
    }
};
