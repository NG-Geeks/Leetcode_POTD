Problem :: 1460. Make Two Arrays Equal by Reversing Subarrays

You are given two integer arrays of equal length target and arr. In one step, you can select any non-empty subarray of arr and reverse it. You are allowed to make any number of steps.

Return true if you can make arr equal to target or false otherwise.

 
Time Complexity :: O(N* log (N)
Space Complexity :: O(1)

Code :: 
class Solution {
public:
    bool canBeEqual(vector<int>& target, vector<int>& arr) {
        sort(arr.begin(),arr.end());
        sort(target.begin(),target.end());
         return arr==target;
    }
};

// APPROACH 2

Time Complexity :: O(N)
Space Complexity :: O(N)
Code ::
class Solution {
public:
    bool canBeEqual(vector<int>& target, vector<int>& arr) {
        // Frequency count for arr
        unordered_map<int, int> arrFreq;
        for (int num : arr) {
            arrFreq[num]++;
        }

        for (int num : target) {
            // If num does not appear in target, then arrays are not equal
            if (arrFreq.find(num) == arrFreq.end()) return false;

            // Decrement the frequency count for num and
            // remove key if the count goes to 0
            arrFreq[num]--;
            if (arrFreq[num] == 0) {
                arrFreq.erase(num);
            }
        }
        return arrFreq.size() == 0;
    }
};
