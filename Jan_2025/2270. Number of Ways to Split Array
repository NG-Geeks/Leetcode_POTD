Problem :: 2270. Number of Ways to Split Array

You are given a 0-indexed integer array nums of length n.

nums contains a valid split at index i if the following are true:

The sum of the first i + 1 elements is greater than or equal to the sum of the last n - i - 1 elements.
There is at least one element to the right of i. That is, 0 <= i < n - 1.
Return the number of valid splits in nums.

Time Complexity :: O(N)
Space Complexity :: O(N)

Code ::
class Solution {
public:
    int waysToSplitArray(vector<int>& nums) {
        int n = nums.size();
        vector<long long>pref(n);
        pref[0] = nums[0];
        int cnt = 0;
        for(int i=1 ; i<n ; i++){
            pref[i] = pref[i-1] + nums[i];
        }
        for(int i=0 ;i < n-1 ; i++ ){
              cnt += (pref[i] >= (pref[n-1] - pref[i]) );
        }
        return cnt;
    }
};
